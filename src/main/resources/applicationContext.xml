<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	default-lazy-init="true" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<description>公共配置</description>

	<!--<import resource="applicationContext-cache.xml" />-->
	<!-- <import resource="applicationContext-config.xml"/> -->

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="wp">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="wp.entity" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.ejb.naming_strategy" value-ref="namingStrategy" />
			</map>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- update -->
				<prop key="hibernate.schemaUpdate">true</prop>
			</props>
		</property>
	</bean>
	<bean id="namingStrategy" class="base.orm.TableNamingStrategy">
		<property name="tablePrefix" value="${table_prefix}"></property>
		<property name="columnPrefix" value="${column_prefix}"></property>
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
	</bean>

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- transaction-manager-ref="transactionManager" -->
	<jpa:repositories base-package="wp"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory"
		factory-class="me.izhong.stone.core.orm.BaseDaoFactoryBean">
	</jpa:repositories>

	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean class="me.izhong.stone.core.support.SpringTool" lazy-init="false" />

	<!-- 定时器配置 -->
	<!--<bean name="quartzScheduler"
		  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="autoStartup" value="${start_job_at_boot}" />
		<property name="startupDelay" value="10"/>
	</bean>-->
	
	<!-- release环境 -->
	<beans profile="product">

		<context:property-placeholder
			ignore-unresolvable="true"
			location="classpath*:/application.base.properties,
			classpath*:/application.properties,
			classpath*:/application.product.properties" />

		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/audit" />
	</beans>

	<!-- release环境 -->
	<beans profile="test">

		<context:property-placeholder
			ignore-unresolvable="true"
			location="classpath*:/application.base.properties,
			classpath*:/application.properties,
			classpath*:/application.test.properties" />

		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/audit" />
	</beans>

	<!-- local development环境 -->
	<beans profile="develop">

		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.base.properties,classpath*:/application.properties,
          			  classpath*:/application.develop.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc_driver}" />
			<property name="url" value="${jdbc_url}" />
			<property name="username" value="${jdbc_username}" />
			<property name="password" value="${jdbc_password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
	</beans>
</beans>